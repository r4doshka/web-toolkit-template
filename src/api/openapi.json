{
  "openapi": "3.0.0",
  "info": { "title": "NestJS API", "description": "", "version": "1.0", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": { "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" } },
    "schemas": {
      "AdminSignInBodyDto": {
        "type": "object",
        "properties": { "email": { "type": "string" }, "password": { "type": "string" } },
        "required": ["email", "password"]
      },
      "GetManyAdminDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/AdminDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "AdminDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "role": { "enum": ["admin", "super_admin"], "type": "string" },
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "role", "email", "firstName", "lastName"]
      },
      "AuthAdminDto": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/AdminDto" }, "token": { "type": "string" } },
        "required": ["user", "token"]
      },
      "CustomerSigninBodyDto": {
        "type": "object",
        "properties": { "email": { "type": "string" }, "password": { "type": "string" } },
        "required": ["email", "password"]
      },
      "GetManyCustomerDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/CustomerDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "role": { "enum": ["customer"], "type": "string" },
          "email": { "type": "string" },
          "stripeCustomerId": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "role", "email"]
      },
      "AuthCustomerDto": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/CustomerDto" }, "token": { "type": "string" } },
        "required": ["user", "token"]
      },
      "CustomerRecoveryPasswordDto": {
        "type": "object",
        "properties": { "email": { "type": "string" } },
        "required": ["email"]
      },
      "CustomerUpdateDto": {
        "type": "object",
        "properties": { "email": { "type": "string" }, "password": { "type": "string" } }
      },
      "CustomerBalanceDto": {
        "type": "object",
        "properties": { "balance": { "type": "number" } },
        "required": ["balance"]
      },
      "GetManyCustomerProfileDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/CustomerProfileDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "CustomerProfileDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "phone": { "type": "string" },
          "dateOfBirth": { "format": "date-time", "type": "string" },
          "sex": { "enum": ["man", "woman", "other"], "type": "string" },
          "street": { "type": "string" },
          "city": { "type": "string" },
          "phoneCode": { "type": "string" },
          "countryOfBirth": { "type": "string" },
          "cityOfBirth": { "type": "string" },
          "citizenship": { "type": "string" },
          "postcode": { "type": "string" },
          "country": { "type": "string" },
          "customerId": { "type": "string" },
          "balance": { "type": "number" },
          "identifyDocument": { "type": "string" },
          "proofOfAddress": { "type": "string" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "phone",
          "dateOfBirth",
          "sex",
          "street",
          "city",
          "phoneCode",
          "countryOfBirth",
          "cityOfBirth",
          "citizenship",
          "postcode",
          "country",
          "customerId",
          "balance",
          "identifyDocument",
          "proofOfAddress"
        ]
      },
      "GetManyPropertyDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "JsonbDto": {
        "type": "object",
        "properties": { "en": { "type": "string" }, "fr": { "type": "string" } },
        "required": ["en", "fr"]
      },
      "PropertyDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "name": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" },
          "investmentCase": { "$ref": "#/components/schemas/JsonbDto" },
          "imageGallery": { "type": "array", "items": { "type": "string" } },
          "videoGallery": { "type": "array", "items": { "type": "string" } },
          "documents": { "type": "array", "items": { "type": "string" } },
          "address": { "$ref": "#/components/schemas/JsonbDto" },
          "localisationDescription": { "$ref": "#/components/schemas/JsonbDto" },
          "floor": { "type": "number" },
          "surface": { "$ref": "#/components/schemas/JsonbDto" },
          "bedrooms": { "type": "number" },
          "bathrooms": { "type": "number" },
          "kitchen": { "type": "number" },
          "gym": { "type": "number" },
          "patio": { "type": "number" },
          "pool": { "$ref": "#/components/schemas/JsonbDto" },
          "hotTub": { "type": "number" },
          "parking": { "type": "number" },
          "propertyCondition": { "type": "number" },
          "neighborhood": { "type": "number" },
          "schools": { "type": "number" },
          "transport": { "type": "object" },
          "offeringName": { "$ref": "#/components/schemas/JsonbDto" },
          "offerDateStart": { "format": "date-time", "type": "string" },
          "offerDateEnd": { "format": "date-time", "type": "string" },
          "numberOfBricks": { "type": "number" },
          "minCommitmentBricks": { "type": "number" },
          "maxCommitmentBricks": { "type": "number" },
          "type": {
            "enum": ["house", "villa", "unit", "blockOfUnits", "premise", "commercial", "land"],
            "type": "string"
          },
          "status": { "enum": ["new", "secondary"], "type": "string" },
          "propertyValuation": { "type": "number" },
          "capitalGrowth": { "type": "number" },
          "foundingTarget": { "type": "number" },
          "rentalDividends": { "type": "number" },
          "dividendsYield": { "type": "number" },
          "returnOnInvestment": { "type": "number" },
          "propertyPurchaseCost": { "type": "number" },
          "otherPropertyPurchaseCost": { "type": "number" },
          "transactionCost": { "type": "number" },
          "cashReserve": { "type": "number" },
          "totalAcquisitionCost": { "type": "number" },
          "debtRemaining": { "type": "number" },
          "taxesOnResale": { "type": "number" },
          "grossRentPerYear": { "type": "number" },
          "propertyExpenses": { "type": "number" },
          "debtReimbursement": { "type": "number" },
          "netRentalBeforeTaxes": { "type": "number" },
          "taxesPayments": { "type": "number" },
          "netRentalPerYear": { "type": "number" },
          "initialDebt": { "type": "number" },
          "loanTerms": { "$ref": "#/components/schemas/JsonbDto" },
          "loanType": { "$ref": "#/components/schemas/JsonbDto" },
          "interestRate": { "type": "number" },
          "brickPrice": { "type": "number" },
          "currentValuePercent": { "type": "number" },
          "totalDividendsReceivedPercent": { "type": "number" },
          "totalPercent": { "type": "number" },
          "totalValue": { "type": "number" },
          "lastDividendsPaidDate": { "format": "date-time", "type": "string" },
          "lastDividendsPerBrick": { "type": "number" },
          "bricksFunded": { "type": "number" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "investmentCase",
          "imageGallery",
          "videoGallery",
          "documents",
          "address",
          "localisationDescription",
          "floor",
          "surface",
          "bedrooms",
          "bathrooms",
          "pool",
          "propertyCondition",
          "neighborhood",
          "schools",
          "transport",
          "offerDateStart",
          "offerDateEnd",
          "numberOfBricks",
          "type",
          "status",
          "propertyValuation",
          "capitalGrowth",
          "foundingTarget",
          "rentalDividends",
          "dividendsYield",
          "returnOnInvestment",
          "propertyPurchaseCost",
          "otherPropertyPurchaseCost",
          "transactionCost",
          "cashReserve",
          "totalAcquisitionCost",
          "debtRemaining",
          "taxesOnResale",
          "grossRentPerYear",
          "propertyExpenses",
          "debtReimbursement",
          "netRentalBeforeTaxes",
          "taxesPayments",
          "netRentalPerYear",
          "initialDebt",
          "loanTerms",
          "loanType",
          "interestRate",
          "brickPrice"
        ]
      },
      "CustomerPendingPropertyResDto": {
        "type": "object",
        "properties": { "purchaseValue": { "type": "number" } },
        "required": ["purchaseValue"]
      },
      "CustomerPropertyResDto": {
        "type": "object",
        "properties": {
          "purchaseValue": { "type": "number" },
          "totalDividendsReceived": { "type": "number" },
          "currentValue": { "type": "number" },
          "total": { "type": "number" },
          "totalPercent": { "type": "number" },
          "currentValuePercent": { "type": "number" },
          "totalDividendsReceivedPercent": { "type": "number" }
        },
        "required": [
          "purchaseValue",
          "totalDividendsReceived",
          "currentValue",
          "total",
          "totalPercent",
          "currentValuePercent",
          "totalDividendsReceivedPercent"
        ]
      },
      "CustomerChartDto": {
        "type": "object",
        "properties": { "month": { "type": "string" }, "value": { "type": "number" } },
        "required": ["month", "value"]
      },
      "CustomerPropertiesChartDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "percent": { "type": "number" },
          "price": { "type": "number" },
          "id": { "type": "string" }
        },
        "required": ["name", "percent", "price", "id"]
      },
      "DashboardStatisticDto": {
        "type": "object",
        "properties": {
          "totalValueOfMyBricks": { "type": "number" },
          "totalValueOfMyBricksPercent": { "type": "number" },
          "totalDividendsReceived": { "type": "number" },
          "totalDividendsReceivedPercent": { "type": "number" },
          "totalEarnedAmount": { "type": "number" },
          "totalEarnedAmountPercent": { "type": "number" },
          "numberOfPropertiesInvestedIn": { "type": "number" },
          "chart": { "type": "array", "items": { "$ref": "#/components/schemas/CustomerPropertiesChartDto" } }
        },
        "required": [
          "totalValueOfMyBricks",
          "totalValueOfMyBricksPercent",
          "totalDividendsReceived",
          "totalDividendsReceivedPercent",
          "totalEarnedAmount",
          "totalEarnedAmountPercent",
          "numberOfPropertiesInvestedIn",
          "chart"
        ]
      },
      "CustomerProfileCreateDto": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "phone": { "type": "string" },
          "sex": { "enum": ["man", "woman", "other"], "type": "string" },
          "dateOfBirth": { "format": "date-time", "type": "string" },
          "street": { "type": "string" },
          "city": { "type": "string" },
          "phoneCode": { "type": "string" },
          "countryOfBirth": { "type": "string" },
          "cityOfBirth": { "type": "string" },
          "citizenship": { "type": "string" },
          "postcode": { "type": "string" },
          "country": { "type": "string" },
          "identifyDocument": { "type": "string" },
          "proofOfAddress": { "type": "string" }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "sex",
          "dateOfBirth",
          "street",
          "city",
          "phoneCode",
          "countryOfBirth",
          "cityOfBirth",
          "citizenship",
          "postcode",
          "country"
        ]
      },
      "CustomerSignedUrlDocumentBodyDto": {
        "type": "object",
        "properties": { "filename": { "type": "string" } },
        "required": ["filename"]
      },
      "SignedUrlResDto": {
        "type": "object",
        "properties": { "signedUrl": { "type": "string" }, "fileKey": { "type": "string" } },
        "required": ["signedUrl", "fileKey"]
      },
      "SecretKeyResponseDto": {
        "type": "object",
        "properties": { "secretKey": { "type": "string" } },
        "required": ["secretKey"]
      },
      "CustomerAddCardDto": {
        "type": "object",
        "properties": { "paymentMethodId": { "type": "string" } },
        "required": ["paymentMethodId"]
      },
      "PaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["creditCard", "bank"], "type": "string" },
          "stripeId": { "type": "string" },
          "brand": { "type": "string" },
          "country": { "type": "string" },
          "expMonth": { "type": "number" },
          "expYear": { "type": "number" },
          "last4": { "type": "string" },
          "isDefault": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "iban": { "type": "string" },
          "bic": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "kind"]
      },
      "CustomerPaymentIntentDto": {
        "type": "object",
        "properties": { "amount": { "type": "number" }, "paymentMethodId": { "type": "string" } },
        "required": ["amount", "paymentMethodId"]
      },
      "PropertyChartDto": {
        "type": "object",
        "properties": { "month": { "format": "date-time", "type": "string" }, "value": { "type": "number" } },
        "required": ["month", "value"]
      },
      "GetManyPropertyAdvantagesDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "PropertyAdvantagesDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "title": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["id", "createdAt", "updatedAt", "title", "description"]
      },
      "GetManyPropertyMonthlyUpdateDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "PropertyMonthlyUpdateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId", "id", "createdAt", "updatedAt", "description"]
      },
      "GetManyPropertyDividendsDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyDividendsDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "PropertyDividendsDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "value": { "type": "number" },
          "perBrick": { "type": "number" }
        },
        "required": ["propertyId", "id", "createdAt", "updatedAt", "value", "perBrick"]
      },
      "GetManyBrickPriceDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/BrickPriceDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "BrickPriceDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "value": { "type": "number" }
        },
        "required": ["propertyId", "id", "createdAt", "value"]
      },
      "BricksTransactionDto": {
        "type": "object",
        "properties": {
          "customerId": { "type": "string" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["purchase", "sale"], "type": "string" },
          "value": { "type": "number" },
          "balance": { "type": "number" },
          "brickPrice": { "type": "number" }
        },
        "required": [
          "customerId",
          "propertyId",
          "id",
          "createdAt",
          "updatedAt",
          "kind",
          "value",
          "balance",
          "brickPrice"
        ]
      },
      "BricksTransactionCreateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "kind": { "type": "string", "enum": ["purchase", "sale"] },
          "value": { "type": "number" }
        },
        "required": ["propertyId", "kind", "value"]
      },
      "GetManyWalletRequestDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/WalletRequestDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "WalletRequestDto": {
        "type": "object",
        "properties": {
          "paymentMethodId": { "type": "string" },
          "walletTransactionId": { "type": "string" },
          "customerId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "bankStatus": { "enum": ["waiting", "declined", "confirmed"], "type": "string" },
          "cardStatus": { "enum": ["processing", "declined", "confirmed"], "type": "string" },
          "kind": { "enum": ["topup", "withdrawal", "refund"], "type": "string" },
          "value": { "type": "number" }
        },
        "required": [
          "paymentMethodId",
          "walletTransactionId",
          "customerId",
          "id",
          "createdAt",
          "updatedAt",
          "bankStatus",
          "cardStatus",
          "kind",
          "value"
        ]
      },
      "WalletRequestResDto": {
        "type": "object",
        "properties": {
          "cursor": { "type": "string", "nullable": true },
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/WalletRequestDto" } }
        },
        "required": ["cursor", "data"]
      },
      "WalletRequestWithdrawalDto": {
        "type": "object",
        "properties": { "paymentMethodId": { "type": "string" }, "value": { "type": "number" } },
        "required": ["paymentMethodId", "value"]
      },
      "WalletRequestBankDto": {
        "type": "object",
        "properties": { "value": { "type": "number" } },
        "required": ["value"]
      },
      "GetManyWalletTransactionDtoResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/WalletTransactionDto" } },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "WalletTransaction": {
        "type": "object",
        "properties": {
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerId": { "type": "string" },
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["topup", "withdrawal", "dividends", "buying_bricks", "selling_bricks"], "type": "string" },
          "value": { "type": "number" },
          "balance": { "type": "number" },
          "requisites": { "type": "string" }
        },
        "required": ["customerId", "id", "createdAt", "updatedAt", "kind", "value", "balance", "requisites"]
      },
      "WalletRequest": {
        "type": "object",
        "properties": {
          "paymentMethods": { "type": "array", "items": { "$ref": "#/components/schemas/PaymentMethod" } },
          "paymentMethodId": { "type": "string" },
          "walletTransaction": { "$ref": "#/components/schemas/WalletTransaction" },
          "walletTransactionId": { "type": "string" },
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "bankStatus": { "enum": ["waiting", "declined", "confirmed"], "type": "string" },
          "cardStatus": { "enum": ["processing", "declined", "confirmed"], "type": "string" },
          "kind": { "enum": ["topup", "withdrawal", "refund"], "type": "string" },
          "value": { "type": "number" }
        },
        "required": [
          "paymentMethods",
          "paymentMethodId",
          "walletTransaction",
          "walletTransactionId",
          "customerId",
          "id",
          "createdAt",
          "updatedAt",
          "bankStatus",
          "cardStatus",
          "kind",
          "value"
        ]
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerId": { "type": "string" },
          "walletRequests": { "type": "array", "items": { "$ref": "#/components/schemas/WalletRequest" } },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["creditCard", "bank"], "type": "string" },
          "stripeId": { "type": "string" },
          "brand": { "type": "string" },
          "country": { "type": "string" },
          "expMonth": { "type": "number" },
          "expYear": { "type": "number" },
          "last4": { "type": "string" },
          "isDefault": { "type": "boolean" },
          "isDeleted": { "type": "boolean" },
          "iban": { "type": "string" },
          "bic": { "type": "string" }
        },
        "required": ["customerId", "id", "createdAt", "updatedAt", "kind"]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "paymentMethods": { "type": "array", "items": { "$ref": "#/components/schemas/PaymentMethod" } },
          "walletTransactions": { "type": "array", "items": { "$ref": "#/components/schemas/WalletTransaction" } },
          "bricksTransactions": { "type": "array", "items": { "$ref": "#/components/schemas/BricksTransaction" } },
          "walletRequests": { "type": "array", "items": { "$ref": "#/components/schemas/WalletRequest" } },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "role": { "enum": ["customer"], "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "stripeCustomerId": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "role", "email", "password"]
      },
      "BricksTransaction": {
        "type": "object",
        "properties": {
          "customer": { "$ref": "#/components/schemas/Customer" },
          "customerId": { "type": "string" },
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["purchase", "sale"], "type": "string" },
          "value": { "type": "number" },
          "balance": { "type": "number" },
          "brickPrice": { "type": "number" }
        },
        "required": [
          "customerId",
          "propertyId",
          "id",
          "createdAt",
          "updatedAt",
          "kind",
          "value",
          "balance",
          "brickPrice"
        ]
      },
      "PropertyMonthlyUpdate": {
        "type": "object",
        "properties": {
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId", "id", "createdAt", "updatedAt", "description"]
      },
      "BrickPrice": {
        "type": "object",
        "properties": {
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "value": { "type": "number" }
        },
        "required": ["propertyId", "id", "createdAt", "value"]
      },
      "PropertyDividends": {
        "type": "object",
        "properties": {
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "value": { "type": "number" },
          "perBrick": { "type": "number" }
        },
        "required": ["propertyId", "id", "createdAt", "updatedAt", "value", "perBrick"]
      },
      "PropertyAdvantages": {
        "type": "object",
        "properties": {
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "title": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId", "id", "createdAt", "updatedAt", "title", "description"]
      },
      "Property": {
        "type": "object",
        "properties": {
          "bricksTransactions": { "type": "array", "items": { "$ref": "#/components/schemas/BricksTransaction" } },
          "propertyMonthlyUpdates": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyMonthlyUpdate" }
          },
          "brickPrices": { "type": "array", "items": { "$ref": "#/components/schemas/BrickPrice" } },
          "propertyDividends": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyDividends" } },
          "propertyAdvantages": { "type": "array", "items": { "$ref": "#/components/schemas/PropertyAdvantages" } },
          "walletTransactions": { "type": "array", "items": { "$ref": "#/components/schemas/WalletTransaction" } },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "name": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" },
          "investmentCase": { "$ref": "#/components/schemas/JsonbDto" },
          "imageGallery": { "type": "array", "items": { "type": "string" } },
          "videoGallery": { "type": "array", "items": { "type": "string" } },
          "documents": { "type": "array", "items": { "type": "string" } },
          "address": { "$ref": "#/components/schemas/JsonbDto" },
          "localisationDescription": { "$ref": "#/components/schemas/JsonbDto" },
          "floor": { "type": "number" },
          "surface": { "$ref": "#/components/schemas/JsonbDto" },
          "bedrooms": { "type": "number" },
          "bathrooms": { "type": "number" },
          "kitchen": { "type": "number" },
          "gym": { "type": "number" },
          "patio": { "type": "number" },
          "pool": { "$ref": "#/components/schemas/JsonbDto" },
          "hotTub": { "type": "number" },
          "parking": { "type": "number" },
          "propertyCondition": { "type": "number" },
          "neighborhood": { "type": "number" },
          "schools": { "type": "number" },
          "transport": { "type": "object" },
          "offeringName": { "$ref": "#/components/schemas/JsonbDto" },
          "offerDateStart": { "format": "date-time", "type": "string" },
          "offerDateEnd": { "format": "date-time", "type": "string" },
          "numberOfBricks": { "type": "number" },
          "minCommitmentBricks": { "type": "number" },
          "maxCommitmentBricks": { "type": "number" },
          "type": {
            "enum": ["house", "villa", "unit", "blockOfUnits", "premise", "commercial", "land"],
            "type": "string"
          },
          "status": { "enum": ["new", "secondary"], "type": "string" },
          "propertyValuation": { "type": "number" },
          "capitalGrowth": { "type": "number" },
          "foundingTarget": { "type": "number" },
          "rentalDividends": { "type": "number" },
          "dividendsYield": { "type": "number" },
          "returnOnInvestment": { "type": "number" },
          "propertyPurchaseCost": { "type": "number" },
          "otherPropertyPurchaseCost": { "type": "number" },
          "transactionCost": { "type": "number" },
          "cashReserve": { "type": "number" },
          "totalAcquisitionCost": { "type": "number" },
          "debtRemaining": { "type": "number" },
          "taxesOnResale": { "type": "number" },
          "grossRentPerYear": { "type": "number" },
          "propertyExpenses": { "type": "number" },
          "debtReimbursement": { "type": "number" },
          "netRentalBeforeTaxes": { "type": "number" },
          "taxesPayments": { "type": "number" },
          "netRentalPerYear": { "type": "number" },
          "initialDebt": { "type": "number" },
          "loanTerms": { "$ref": "#/components/schemas/JsonbDto" },
          "loanType": { "$ref": "#/components/schemas/JsonbDto" },
          "interestRate": { "type": "number" },
          "brickPrice": { "type": "number" },
          "currentValuePercent": { "type": "number" },
          "totalDividendsReceivedPercent": { "type": "number" },
          "totalPercent": { "type": "number" },
          "totalValue": { "type": "number" },
          "lastDividendsPaidDate": { "format": "date-time", "type": "string" },
          "lastDividendsPerBrick": { "type": "number" },
          "bricksFunded": { "type": "number" }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "investmentCase",
          "imageGallery",
          "videoGallery",
          "documents",
          "address",
          "localisationDescription",
          "floor",
          "surface",
          "bedrooms",
          "bathrooms",
          "pool",
          "propertyCondition",
          "neighborhood",
          "schools",
          "transport",
          "offerDateStart",
          "offerDateEnd",
          "numberOfBricks",
          "type",
          "status",
          "propertyValuation",
          "capitalGrowth",
          "foundingTarget",
          "rentalDividends",
          "dividendsYield",
          "returnOnInvestment",
          "propertyPurchaseCost",
          "otherPropertyPurchaseCost",
          "transactionCost",
          "cashReserve",
          "totalAcquisitionCost",
          "debtRemaining",
          "taxesOnResale",
          "grossRentPerYear",
          "propertyExpenses",
          "debtReimbursement",
          "netRentalBeforeTaxes",
          "taxesPayments",
          "netRentalPerYear",
          "initialDebt",
          "loanTerms",
          "loanType",
          "interestRate",
          "brickPrice"
        ]
      },
      "WalletTransactionDto": {
        "type": "object",
        "properties": {
          "customerId": { "type": "string" },
          "property": { "$ref": "#/components/schemas/Property" },
          "propertyId": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "kind": { "enum": ["topup", "withdrawal", "dividends", "buying_bricks", "selling_bricks"], "type": "string" },
          "value": { "type": "number" },
          "balance": { "type": "number" },
          "requisites": { "type": "string" }
        },
        "required": ["customerId", "id", "createdAt", "updatedAt", "kind", "value", "balance", "requisites"]
      },
      "WalletTransactionResDto": {
        "type": "object",
        "properties": {
          "cursor": { "type": "string", "nullable": true },
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/WalletTransactionDto" } }
        },
        "required": ["cursor", "data"]
      },
      "PaymentMethodCreateBankDto": {
        "type": "object",
        "properties": { "iban": { "type": "string" }, "bic": { "type": "string" } },
        "required": ["iban", "bic"]
      },
      "AdminCreateCrudDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "role": { "type": "string", "enum": ["admin", "super_admin"] }
        },
        "required": ["email", "password", "firstName", "lastName", "id", "createdAt", "updatedAt", "role"]
      },
      "AdminUpdateCrudDto": {
        "type": "object",
        "properties": {
          "role": { "enum": ["admin", "super_admin"], "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "id": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" }
        },
        "required": ["role", "email", "password", "firstName", "lastName", "id", "createdAt", "updatedAt"]
      },
      "PropertyCreateDto": {
        "type": "object",
        "properties": {
          "name": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" },
          "investmentCase": { "$ref": "#/components/schemas/JsonbDto" },
          "imageGallery": { "type": "array", "items": { "type": "string" } },
          "videoGallery": { "type": "array", "items": { "type": "string" } },
          "documents": { "type": "array", "items": { "type": "string" } },
          "address": { "$ref": "#/components/schemas/JsonbDto" },
          "localisationDescription": { "$ref": "#/components/schemas/JsonbDto" },
          "floor": { "type": "number" },
          "surface": { "$ref": "#/components/schemas/JsonbDto" },
          "bedrooms": { "type": "number" },
          "bathrooms": { "type": "number" },
          "kitchen": { "type": "number" },
          "gym": { "type": "number" },
          "patio": { "type": "number" },
          "pool": { "$ref": "#/components/schemas/JsonbDto" },
          "hotTub": { "type": "number" },
          "parking": { "type": "number" },
          "propertyCondition": { "type": "number" },
          "neighborhood": { "type": "number" },
          "schools": { "type": "number" },
          "transport": { "type": "object" },
          "offeringName": { "$ref": "#/components/schemas/JsonbDto" },
          "offerDateStart": { "format": "date-time", "type": "string" },
          "offerDateEnd": { "format": "date-time", "type": "string" },
          "numberOfBricks": { "type": "number" },
          "minCommitmentBricks": { "type": "number" },
          "maxCommitmentBricks": { "type": "number" },
          "type": {
            "enum": ["house", "villa", "unit", "blockOfUnits", "premise", "commercial", "land"],
            "type": "string"
          },
          "status": { "enum": ["new", "secondary"], "type": "string" },
          "propertyValuation": { "type": "number" },
          "capitalGrowth": { "type": "number" },
          "dividendsYield": { "type": "number" },
          "foundingTarget": { "type": "number" },
          "rentalDividends": { "type": "number" },
          "returnOnInvestment": { "type": "number" },
          "propertyPurchaseCost": { "type": "number" },
          "otherPropertyPurchaseCost": { "type": "number" },
          "transactionCost": { "type": "number" },
          "cashReserve": { "type": "number" },
          "totalAcquisitionCost": { "type": "number" },
          "debtRemaining": { "type": "number" },
          "taxesOnResale": { "type": "number" },
          "grossRentPerYear": { "type": "number" },
          "propertyExpenses": { "type": "number" },
          "debtReimbursement": { "type": "number" },
          "netRentalBeforeTaxes": { "type": "number" },
          "taxesPayments": { "type": "number" },
          "netRentalPerYear": { "type": "number" },
          "initialDebt": { "type": "number" },
          "loanTerms": { "$ref": "#/components/schemas/JsonbDto" },
          "loanType": { "$ref": "#/components/schemas/JsonbDto" },
          "interestRate": { "type": "number" },
          "brickPrice": { "type": "number" },
          "totalDividendsReceivedPercent": { "type": "number" },
          "totalPercent": { "type": "number" },
          "currentValuePercent": { "type": "number" }
        },
        "required": [
          "name",
          "description",
          "investmentCase",
          "imageGallery",
          "videoGallery",
          "address",
          "localisationDescription",
          "surface",
          "bedrooms",
          "bathrooms",
          "pool",
          "propertyCondition",
          "neighborhood",
          "schools",
          "transport",
          "offerDateStart",
          "offerDateEnd",
          "type",
          "status",
          "propertyValuation",
          "dividendsYield",
          "foundingTarget",
          "rentalDividends",
          "returnOnInvestment",
          "propertyPurchaseCost",
          "otherPropertyPurchaseCost",
          "transactionCost",
          "cashReserve",
          "totalAcquisitionCost",
          "debtRemaining",
          "taxesOnResale",
          "grossRentPerYear",
          "propertyExpenses",
          "debtReimbursement",
          "netRentalBeforeTaxes",
          "taxesPayments",
          "netRentalPerYear",
          "initialDebt",
          "loanTerms",
          "loanType",
          "interestRate",
          "brickPrice"
        ]
      },
      "PropertyUpdateDto": { "type": "object", "properties": { "bricksFunded": { "type": "number" } } },
      "SignedUrlPhotoBodyDto": {
        "type": "object",
        "properties": { "filename": { "type": "string" } },
        "required": ["filename"]
      },
      "SignedUrlVideoBodyDto": {
        "type": "object",
        "properties": { "filename": { "type": "string" } },
        "required": ["filename"]
      },
      "SignedUrlDocumentBodyDto": {
        "type": "object",
        "properties": { "filename": { "type": "string" } },
        "required": ["filename"]
      },
      "BrickPriceCreateCrudDto": {
        "type": "object",
        "properties": { "propertyId": { "type": "string" }, "value": { "type": "number" } },
        "required": ["propertyId", "value"]
      },
      "WalletRequestUpdateDto": {
        "type": "object",
        "properties": { "bankStatus": { "enum": ["waiting", "declined", "confirmed"], "type": "string" } },
        "required": ["bankStatus"]
      },
      "WalletTransactionCreateDividendsDto": {
        "type": "object",
        "properties": { "propertyId": { "type": "string" }, "value": { "type": "number" } },
        "required": ["propertyId", "value"]
      },
      "WalletTransactionDividendsRes": {
        "type": "object",
        "properties": { "data": { "type": "number" }, "status": { "type": "number" } },
        "required": ["data", "status"]
      },
      "PropertyMonthlyUpdateCreateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId", "description"]
      },
      "PropertyMonthlyUpdateUpdateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId"]
      },
      "PropertyAdvantagesCreateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "title": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId"]
      },
      "PropertyAdvantagesUpdateDto": {
        "type": "object",
        "properties": {
          "propertyId": { "type": "string" },
          "title": { "$ref": "#/components/schemas/JsonbDto" },
          "description": { "$ref": "#/components/schemas/JsonbDto" }
        },
        "required": ["propertyId", "title", "description"]
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "type": "string" } } } }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_checkApi",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "ok" },
                    "info": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "info": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": { "redis": { "status": "down", "message": "Could not connect" } },
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": { "status": "up" },
                        "redis": { "status": "down", "message": "Could not connect" }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins/sign-in": {
      "post": {
        "operationId": "AdminsController_signIn",
        "summary": "Sign in via email/password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminSignInBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthAdminDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthAdminDto" } } }
          }
        },
        "tags": ["Admins"]
      }
    },
    "/admins/me": {
      "get": {
        "operationId": "AdminsController_getMe",
        "summary": "Retrieve current admin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminDto" } } }
          }
        },
        "tags": ["Admins"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admins/email-is-uniq": {
      "get": {
        "operationId": "AdminsController_emailIsUniq",
        "summary": "Check admin email for uniqueness",
        "parameters": [{ "name": "email", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "", "content": { "application/json": { "schema": { "type": "boolean" } } } }
        },
        "tags": ["Admins"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/email/sign-in": {
      "post": {
        "operationId": "CustomersController_signIn",
        "summary": "Sign-in with email and retrieve user with bearer token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerSigninBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthCustomerDto" } } }
          },
          "201": { "description": "", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "tags": ["Customers"]
      }
    },
    "/customers/email/sign-up": {
      "post": {
        "operationId": "CustomersController_signUp",
        "summary": "Sign-up with email and retrieve user with bearer token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerSigninBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthCustomerDto" } } }
          },
          "201": { "description": "", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "tags": ["Customers"]
      }
    },
    "/customers/password-recovery": {
      "post": {
        "operationId": "CustomersController_passwordRecovery",
        "summary": "Password recovery",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CustomerRecoveryPasswordDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthCustomerDto" } } }
          },
          "201": { "description": "" }
        },
        "tags": ["Customers"]
      }
    },
    "/customers/me": {
      "get": {
        "operationId": "CustomersController_getMe",
        "summary": "Retrieve current customer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "CustomersController_updateCustomer",
        "summary": "Update customer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerUpdateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthCustomerDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/balance": {
      "get": {
        "operationId": "CustomersController_getBalance",
        "summary": "Retrieve customer balance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerBalanceDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/profile": {
      "get": {
        "operationId": "CustomersController_getProfiles",
        "summary": "Retrieve customer profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "CustomersController_createProfile",
        "summary": "Create customer profile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileCreateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileCreateDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileCreateDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "CustomersController_updateProfile",
        "summary": "Update customer profile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileCreateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileCreateDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/properties": {
      "get": {
        "operationId": "CustomersController_getProperties",
        "summary": "Retrieve many  customer Properties",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/properties/pending-investments": {
      "get": {
        "operationId": "CustomersController_getPropertiesPendingInvestments",
        "summary": "Retrieve many Pending Investments Properties",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/properties/{id}/pending-investments": {
      "get": {
        "operationId": "CustomersController_getPropertyPendingInvestments",
        "summary": "Retrieve Pending Investments Property info",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/CustomerPendingPropertyResDto" } }
            }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/properties/{id}": {
      "get": {
        "operationId": "CustomersController_getProperty",
        "summary": "Retrieve customer property info",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerPropertyResDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/historical-dividends-chart": {
      "get": {
        "operationId": "CustomersController_getDividendsChart",
        "summary": "Retrieve historical rental dividends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerChartDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/historical-portfolio-chart": {
      "get": {
        "operationId": "CustomersController_getPortfolioChart",
        "summary": "Retrieve historical value of my portfolio Dividends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerChartDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/dashboard-statistic": {
      "get": {
        "operationId": "CustomersController_getDashboardStatistic",
        "summary": "Get dashboard customer percent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DashboardStatisticDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/document-signed-url": {
      "post": {
        "operationId": "CustomersController_createSignedUrlForPropertyDocument",
        "summary": "Create signed url to customer document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CustomerSignedUrlDocumentBodyDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/stripe/create-payment-method-intent": {
      "post": {
        "operationId": "CustomersController_stripeCreatePaymentMethod",
        "summary": "Create stripe payment method intent",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SecretKeyResponseDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SecretKeyResponseDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/stripe/add-payment-method": {
      "post": {
        "operationId": "CustomersController_addCustomerPaymentMethod",
        "summary": "Add customer payment method",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerAddCardDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodDto" } } }
          }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/stripe/create-payment-intent": {
      "post": {
        "operationId": "CustomersController_stripeCreatePaymentIntent",
        "summary": "Create payment intent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerPaymentIntentDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerDto" } } }
          },
          "201": { "description": "", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/customers/stripe/delete-payment-method": {
      "delete": {
        "operationId": "CustomersController_deleteCustomerPaymentMethod",
        "summary": "Delete customer payment method",
        "parameters": [{ "name": "paymentMethodId", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "" } },
        "tags": ["Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/stripe/webhook": {
      "post": {
        "operationId": "StripeController_webhook",
        "summary": "Handle webhook | TEST ONLY",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Stripe"]
      }
    },
    "/properties": {
      "get": {
        "operationId": "PropertiesController_getProperty",
        "summary": "Retrieve many Property",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}": {
      "get": {
        "operationId": "PropertiesController_getProperties",
        "summary": "Retrieve one Property",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}/brick-price-chart": {
      "get": {
        "operationId": "PropertiesController_getDividendsChart",
        "summary": "Retrieve historical brick price",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyChartDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}/monthly-dividends-chart": {
      "get": {
        "operationId": "PropertiesController_getMonthlyDividendsChartData",
        "summary": "Retrieve historical monthly dividends distribution",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyChartDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}/advantages": {
      "get": {
        "operationId": "PropertiesController_getPropertyAdvantages",
        "summary": "Retrieve property advantages",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}/monthly-updates": {
      "get": {
        "operationId": "PropertiesController_getPropertyMonthlyUpdates",
        "summary": "Retrieve many Property Monthly Updates",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/properties/{id}/dividends": {
      "get": {
        "operationId": "PropertiesController_getPropertyDividends",
        "summary": "Retrieve many property dividends",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDividendsDto" } } }
          }
        },
        "tags": ["Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/brick-prices": {
      "get": {
        "operationId": "BrickPriceController_getBrickPrices",
        "summary": "Retrieve many Brick Prices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BrickPriceDto" } } }
          }
        },
        "tags": ["Brick Price"],
        "security": [{ "bearer": [] }]
      }
    },
    "/bricks-transactions": {
      "get": {
        "operationId": "BricksTransactionsController_getBricksTransactions",
        "summary": "Retrieve many Bricks Transactions",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BricksTransactionDto" } } }
          }
        },
        "tags": ["Bricks Transactions"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "BricksTransactionsController_createBricksTransaction",
        "summary": "Create bricks transaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BricksTransactionCreateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BricksTransactionDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BricksTransactionDto" } } }
          }
        },
        "tags": ["Bricks Transactions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/bricks-transactions/{id}": {
      "get": {
        "operationId": "BricksTransactionsController_getBricksTransaction",
        "summary": "Retrieve one Bricks Transaction by id",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BricksTransactionDto" } } }
          }
        },
        "tags": ["Bricks Transactions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/wallet-requests": {
      "get": {
        "operationId": "WalletRequestsController_getWalletRequests",
        "summary": "Retrieve many wallet requests",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestResDto" } } }
          }
        },
        "tags": ["Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/wallet-requests/withdrawal": {
      "post": {
        "operationId": "WalletRequestsController_createWalletTransactionsWithdrawal",
        "summary": "Create wallet request for withdrawal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestWithdrawalDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          }
        },
        "tags": ["Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/wallet-requests/bank": {
      "post": {
        "operationId": "WalletRequestsController_createWalletTransactionsByBank",
        "summary": "Create wallet request by bank account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestBankDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          }
        },
        "tags": ["Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/wallet-transactions": {
      "get": {
        "operationId": "WalletTransactionsController_getWalletTransactions",
        "summary": "Retrieve many Wallet Transactions",
        "parameters": [
          { "name": "cursor", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "take", "required": false, "in": "query", "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletTransactionResDto" } } }
          }
        },
        "tags": ["Wallet Transactions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment-methods": {
      "get": {
        "operationId": "PaymentMethodsController_getPaymentMethods",
        "summary": "Retrieve many Payment Methods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodDto" } } }
          }
        },
        "tags": ["Payment Methods"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment-methods/{id}": {
      "get": {
        "operationId": "PaymentMethodsController_getPaymentMethod",
        "summary": "Retrieve Payment Methods",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodDto" } } }
          }
        },
        "tags": ["Payment Methods"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "PaymentMethodsController_deletePaymentMethod",
        "summary": "Delete customer payment method",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "" } },
        "tags": ["Payment Methods"],
        "security": [{ "bearer": [] }]
      }
    },
    "/payment-methods/bank": {
      "post": {
        "operationId": "PaymentMethodsController_createBank",
        "summary": "Create customer bank payment method",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodCreateBankDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodCreateBankDto" } }
            }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PaymentMethodDto" } } }
          }
        },
        "tags": ["Payment Methods"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/admins/{id}": {
      "get": {
        "operationId": "getOneBaseAdminsCrudControllerAdminDto",
        "summary": "Retrieve one AdminDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminDto" } } }
          }
        },
        "tags": ["Admin-panel. Admins"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBaseAdminsCrudControllerAdminDto",
        "summary": "Update one AdminDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminUpdateCrudDto" } } }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminDto" } } }
          }
        },
        "tags": ["Admin-panel. Admins"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteOneBaseAdminsCrudControllerAdminDto",
        "summary": "Delete one AdminDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Delete one base response" } },
        "tags": ["Admin-panel. Admins"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/admins": {
      "get": {
        "operationId": "getManyBaseAdminsCrudControllerAdminDto",
        "summary": "Retrieve many AdminDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyAdminDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/AdminDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Admins"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createOneBaseAdminsCrudControllerAdminDto",
        "summary": "Create one AdminDto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminCreateCrudDto" } } }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AdminDto" } } }
          }
        },
        "tags": ["Admin-panel. Admins"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/customers/{id}": {
      "get": {
        "operationId": "getOneBaseCustomersCrudControllerCustomerDto",
        "summary": "Retrieve one CustomerDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerDto" } } }
          }
        },
        "tags": ["Admin-panel. Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/customers": {
      "get": {
        "operationId": "getManyBaseCustomersCrudControllerCustomerDto",
        "summary": "Retrieve many CustomerDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyCustomerDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/CustomerDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Customers"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/customers-profiles/{id}": {
      "get": {
        "operationId": "getOneBaseCustomerProfileCrudControllerCustomerProfileDto",
        "summary": "Retrieve one CustomerProfileDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileDto" } } }
          }
        },
        "tags": ["Admin-panel. Customers-profiles"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBaseCustomerProfileCrudControllerCustomerProfileDto",
        "summary": "Update one CustomerProfileDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileDto" } } }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CustomerProfileDto" } } }
          }
        },
        "tags": ["Admin-panel. Customers-profiles"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/customers-profiles": {
      "get": {
        "operationId": "getManyBaseCustomerProfileCrudControllerCustomerProfileDto",
        "summary": "Retrieve many CustomerProfileDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyCustomerProfileDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/CustomerProfileDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Customers-profiles"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/properties": {
      "post": {
        "operationId": "createOneBasePropertiesCrudControllerPropertyDto",
        "summary": "Create one PropertyDto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyCreateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          },
          "201": {
            "description": "Get create one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Admin-panel. Properties"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getManyBasePropertiesCrudControllerPropertyDto",
        "summary": "Retrieve many PropertyDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyPropertyDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/PropertyDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/properties/{id}": {
      "get": {
        "operationId": "getOneBasePropertiesCrudControllerPropertyDto",
        "summary": "Retrieve one PropertyDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Admin-panel. Properties"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBasePropertiesCrudControllerPropertyDto",
        "summary": "Update one PropertyDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyUpdateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDto" } } }
          }
        },
        "tags": ["Admin-panel. Properties"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteOneBasePropertiesCrudControllerPropertyDto",
        "summary": "Delete one PropertyDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Delete one base response" } },
        "tags": ["Admin-panel. Properties"],
        "security": [{ "bearer": [] }]
      }
    },
    "undefined": {
      "undefined": {
        "summary": "Update one WalletRequestDto",
        "operationId": "updateOneBaseWalletRequestsCrudControllerWalletRequestDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestUpdateDto" } } }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          }
        },
        "tags": ["Admin-panel. Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-photo-signed-url": {
      "post": {
        "operationId": "PropertiesController_createSignedUrlForPropertyPhoto",
        "summary": "Create signed url to property photo",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlPhotoBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Admin-panel. Properties"]
      }
    },
    "/admin-panel/property-video-signed-url": {
      "post": {
        "operationId": "PropertiesController_createSignedUrlForPropertyVideo",
        "summary": "Create signed url to property video",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlVideoBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Admin-panel. Properties"]
      }
    },
    "/admin-panel/property-document-signed-url": {
      "post": {
        "operationId": "PropertiesController_createSignedUrlForPropertyDocument",
        "summary": "Create signed url to property document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlDocumentBodyDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          },
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignedUrlResDto" } } }
          }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Admin-panel. Properties"]
      }
    },
    "/admin-panel/brick-prices": {
      "post": {
        "operationId": "createOneBaseBrickPricesCrudControllerBrickPriceDto",
        "summary": "Create one BrickPriceDto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BrickPriceCreateCrudDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BrickPrice" } } }
          },
          "201": {
            "description": "Get create one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BrickPriceDto" } } }
          }
        },
        "tags": ["Admin-panel. Brick prices"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getManyBaseBrickPricesCrudControllerBrickPriceDto",
        "summary": "Retrieve many BrickPriceDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyBrickPriceDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/BrickPriceDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Brick prices"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/wallet-requests/{id}": {
      "patch": {
        "operationId": "updateOneBaseWalletRequestsCrudControllerWalletRequestDto",
        "summary": "Update one WalletRequestDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestUpdateDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          }
        },
        "tags": ["Admin-panel. Wallet Requests"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getOneBaseWalletRequestsCrudControllerWalletRequestDto",
        "summary": "Retrieve one WalletRequestDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletRequestDto" } } }
          }
        },
        "tags": ["Admin-panel. Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/wallet-requests": {
      "get": {
        "operationId": "getManyBaseWalletRequestsCrudControllerWalletRequestDto",
        "summary": "Retrieve many WalletRequestDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyWalletRequestDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/WalletRequestDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Wallet Requests"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/wallet-transactions/dividends": {
      "post": {
        "operationId": "WalletTransactionsController_createWalletTransactionsDividends",
        "summary": "Create dividends transaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/WalletTransactionCreateDividendsDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/WalletTransactionDividendsRes" } }
            }
          }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Admin-panel. Wallet Transactions"]
      }
    },
    "/admin-panel/wallet-transactions/{id}": {
      "get": {
        "operationId": "getOneBaseWalletTransactionsCrudControllerWalletTransactionDto",
        "summary": "Retrieve one WalletTransactionDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WalletTransactionDto" } } }
          }
        },
        "tags": ["Admin-panel. Wallet Transactions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/wallet-transactions": {
      "get": {
        "operationId": "getManyBaseWalletTransactionsCrudControllerWalletTransactionDto",
        "summary": "Retrieve many WalletTransactionDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyWalletTransactionDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/WalletTransactionDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Wallet Transactions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-monthly-updates/{id}": {
      "get": {
        "operationId": "getOneBasePropertyMonthlyUpdatesCrudControllerPropertyMonthlyUpdateDto",
        "summary": "Retrieve one PropertyMonthlyUpdateDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Monthly Updates"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBasePropertyMonthlyUpdatesCrudControllerPropertyMonthlyUpdateDto",
        "summary": "Update one PropertyMonthlyUpdateDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateUpdateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Monthly Updates"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteOneBasePropertyMonthlyUpdatesCrudControllerPropertyMonthlyUpdateDto",
        "summary": "Delete one PropertyMonthlyUpdateDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Delete one base response" } },
        "tags": ["Admin-panel. Property Monthly Updates"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-monthly-updates": {
      "get": {
        "operationId": "getManyBasePropertyMonthlyUpdatesCrudControllerPropertyMonthlyUpdateDto",
        "summary": "Retrieve many PropertyMonthlyUpdateDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyPropertyMonthlyUpdateDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Property Monthly Updates"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createOneBasePropertyMonthlyUpdatesCrudControllerPropertyMonthlyUpdateDto",
        "summary": "Create one PropertyMonthlyUpdateDto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateCreateDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyMonthlyUpdateDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Monthly Updates"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-dividends/{id}": {
      "get": {
        "operationId": "getOneBasePropertyDividendsCrudControllerPropertyDividendsDto",
        "summary": "Retrieve one PropertyDividendsDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyDividendsDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Dividends"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-dividends": {
      "get": {
        "operationId": "getManyBasePropertyDividendsCrudControllerPropertyDividendsDto",
        "summary": "Retrieve many PropertyDividendsDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyPropertyDividendsDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/PropertyDividendsDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Property Dividends"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-advantages/{id}": {
      "get": {
        "operationId": "getOneBasePropertyAdvantagesCrudControllerPropertyAdvantagesDto",
        "summary": "Retrieve one PropertyAdvantagesDto",
        "parameters": [
          { "name": "id", "required": true, "in": "path", "schema": { "type": "string" } },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Advantages"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBasePropertyAdvantagesCrudControllerPropertyAdvantagesDto",
        "summary": "Update one PropertyAdvantagesDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesUpdateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Advantages"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteOneBasePropertyAdvantagesCrudControllerPropertyAdvantagesDto",
        "summary": "Delete one PropertyAdvantagesDto",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": { "200": { "description": "Delete one base response" } },
        "tags": ["Admin-panel. Property Advantages"],
        "security": [{ "bearer": [] }]
      }
    },
    "/admin-panel/property-advantages": {
      "get": {
        "operationId": "getManyBasePropertyAdvantagesCrudControllerPropertyAdvantagesDto",
        "summary": "Retrieve many PropertyAdvantagesDto",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyPropertyAdvantagesDtoResponseDto" },
                    { "type": "array", "items": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Admin-panel. Property Advantages"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "createOneBasePropertyAdvantagesCrudControllerPropertyAdvantagesDto",
        "summary": "Create one PropertyAdvantagesDto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesCreateDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PropertyAdvantagesDto" } } }
          }
        },
        "tags": ["Admin-panel. Property Advantages"],
        "security": [{ "bearer": [] }]
      }
    }
  }
}
